<?php

/**
 * @file
 * The OpenEuropa List Pages module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * Implements hook_facets_search_api_query_type_mapping_alter().
 */
function oe_list_pages_facets_search_api_query_type_mapping_alter($backend_plugin_id, array &$query_types) {
  // We need to define a new query type to be used by full text list facets,
  // which will apply query logic required for text search.
  $query_types['fulltext_comparison'] = 'fulltext_query_type';
  $query_types['date_comparison'] = 'date_query_type';
  $query_types['oe_list_pages_date_status_comparison'] = 'oe_list_pages_date_status_query_type';
}

/**
 * Implements hook_theme().
 */
function oe_list_pages_theme($existing, $type, $theme, $path) {
  return [
    'oe_list_pages_selected_facet' => [
      'variables' => [
        'items' => [],
        'label' => NULL,
      ],
    ],
    'oe_list_pages_rss' => [
      'variables' => [
        'title' => '',
        'link' => '',
        'description' => '',
        'language' => '',
        'copyright' => '',
        'image' => [],
        'channel_elements' => [],
        'items' => [],
      ],
    ],
    'oe_list_pages_rss_item' => [
      'variables' => [
        'title' => '',
        'link' => '',
        'guid' => '',
        'description' => '',
        'item_elements' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_locale_translation_projects_alter().
 */
function oe_list_pages_locale_translation_projects_alter(&$projects) {
  $projects['oe_list_pages']['info']['interface translation server pattern'] = drupal_get_path('module', 'oe_list_pages') . '/translations/%project-%language.po';
}

/**
 * Implements hook_entity_extra_field_info().
 */
function oe_list_pages_entity_extra_field_info(): array {
  $extra_field = [];

  $node_type_storage = \Drupal::entityTypeManager()->getStorage('node_type');
  $bundles = \Drupal::service('entity_type.bundle.info')->getBundleInfo('node');
  foreach ($bundles as $bundle_id => $bundle_definition) {
    $bundle = $node_type_storage->load($bundle_id);
    $meta_bundles = $bundle->getThirdPartySetting('emr', 'entity_meta_bundles', []);

    if (!in_array('oe_list_page', $meta_bundles)) {
      continue;
    }
    $extra_field['node'][$bundle_id]['display']['rss_link'] = [
      'label' => t('RSS link'),
      'description' => t('Link which leads to RSS feed.'),
      'visible' => FALSE,
    ];
  }

  return $extra_field;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function oe_list_pages_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if (!$display->getComponent('rss_link')) {
    return;
  }

  $url = Url::fromRoute('entity.node.list_page_rss', ['node' => $entity->id()]);
  $rss_link = Link::fromTextAndUrl(t('RSS'), $url);
  $build['rss_link'] = $rss_link->toRenderable();
}
